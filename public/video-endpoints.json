{
  "/api/v1/videos/generate": {
    "post": {
      "summary": "Generate a new video",
      "description": "Creates a new video using a trained influencer. The video will be generated asynchronously.",
      "tags": ["Videos"],
      "security": [
        {
          "ApiKeyAuth": []
        }
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["influencerId", "script", "title"],
              "properties": {
                "influencerId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "ID of the influencer to use for the video",
                  "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "script": {
                  "type": "string",
                  "description": "Script text for the video",
                  "example": "Hello, I'm Digital Emily. Welcome to my channel where I talk about technology and AI advancements."
                },
                "title": {
                  "type": "string",
                  "description": "Title of the video",
                  "example": "Channel Introduction"
                },
                "callbackUrl": {
                  "type": "string",
                  "description": "Optional webhook URL to notify when video is ready",
                  "example": "https://your-webhook-url.com/callback"
                }
              }
            }
          }
        }
      },
      "responses": {
        "202": {
          "description": "Video generation started successfully",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                  },
                  "status": {
                    "type": "string",
                    "example": "generating"
                  },
                  "message": {
                    "type": "string",
                    "example": "Video generation started"
                  },
                  "estimated_completion_time": {
                    "type": "integer",
                    "description": "Unix timestamp for estimated completion",
                    "example": 1704099600
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Invalid input",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "error": {
                    "type": "string",
                    "example": "Missing required parameters"
                  },
                  "message": {
                    "type": "string",
                    "example": "influencerId, script, and title are required"
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Influencer not found"
        }
      },
      "x-code-samples": [
        {
          "lang": "curl",
          "source": "curl -X POST http://localhost:3000/api/v1/videos/generate \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-api-key: your_api_key_here' \\\n  -d '{\n    \"influencerId\": \"123e4567-e89b-12d3-a456-426614174000\",\n    \"script\": \"Hello, I\\'m Digital Emily. Welcome to my channel where I talk about technology and AI advancements.\",\n    \"title\": \"Channel Introduction\",\n    \"callbackUrl\": \"https://your-webhook-url.com/callback\"\n  }'"
        },
        {
          "lang": "javascript",
          "source": "const response = await fetch('http://localhost:3000/api/v1/videos/generate', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n    'x-api-key': 'your_api_key_here'\n  },\n  body: JSON.stringify({\n    influencerId: '123e4567-e89b-12d3-a456-426614174000',\n    script: 'Hello, I\\'m Digital Emily. Welcome to my channel where I talk about technology and AI advancements.',\n    title: 'Channel Introduction',\n    callbackUrl: 'https://your-webhook-url.com/callback'\n  })\n});\n\nconst data = await response.json();\nconsole.log(data);"
        }
      ]
    }
  },
  "/api/v1/videos": {
    "get": {
      "summary": "List all videos",
      "description": "Returns a paginated list of all videos generated by the authenticated user.",
      "tags": ["Videos"],
      "security": [
        {
          "ApiKeyAuth": []
        }
      ],
      "parameters": [
        {
          "name": "page",
          "in": "query",
          "description": "Page number for pagination",
          "schema": {
            "type": "integer",
            "default": 1
          }
        },
        {
          "name": "limit",
          "in": "query",
          "description": "Number of items per page",
          "schema": {
            "type": "integer",
            "default": 10
          }
        }
      ],
      "responses": {
        "200": {
          "description": "List of videos",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "count": {
                    "type": "integer",
                    "example": 25
                  },
                  "page": {
                    "type": "integer",
                    "example": 1
                  },
                  "limit": {
                    "type": "integer",
                    "example": 10
                  },
                  "total_pages": {
                    "type": "integer",
                    "example": 3
                  },
                  "videos": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "123e4567-e89b-12d3-a456-426614174000"
                        },
                        "title": {
                          "type": "string",
                          "example": "Channel Introduction"
                        },
                        "status": {
                          "type": "string",
                          "example": "completed",
                          "enum": ["generating", "completed", "failed"]
                        },
                        "video_url": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://example.com/videos/video123.mp4"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2023-01-01T00:00:00Z"
                        },
                        "influencer_id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "123e4567-e89b-12d3-a456-426614174000"
                        },
                        "influencer_name": {
                          "type": "string",
                          "example": "Digital Emily"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        }
      },
      "x-code-samples": [
        {
          "lang": "curl",
          "source": "curl -X GET \"http://localhost:3000/api/v1/videos?page=1&limit=10\" \\\n  -H 'x-api-key: your_api_key_here'"
        },
        {
          "lang": "javascript",
          "source": "const response = await fetch('http://localhost:3000/api/v1/videos?page=1&limit=10', {\n  headers: {\n    'x-api-key': 'your_api_key_here'\n  }\n});\n\nconst data = await response.json();\nconsole.log(data.videos);"
        }
      ]
    }
  },
  "/api/v1/videos/{id}": {
    "get": {
      "summary": "Get a specific video",
      "description": "Returns detailed information about a specific video.",
      "tags": ["Videos"],
      "security": [
        {
          "ApiKeyAuth": []
        }
      ],
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the video to retrieve",
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "example": "123e4567-e89b-12d3-a456-426614174000"
        }
      ],
      "responses": {
        "200": {
          "description": "Video details",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                  },
                  "title": {
                    "type": "string",
                    "example": "Channel Introduction"
                  },
                  "script": {
                    "type": "string",
                    "example": "Hello, I'm Digital Emily. Welcome to my channel where I talk about technology and AI advancements."
                  },
                  "status": {
                    "type": "string",
                    "example": "completed",
                    "enum": ["generating", "completed", "failed"]
                  },
                  "video_url": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://example.com/videos/video123.mp4"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-01-01T00:00:00Z"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-01-02T00:00:00Z"
                  },
                  "influencer_id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                  },
                  "influencer_name": {
                    "type": "string",
                    "example": "Digital Emily"
                  },
                  "error": {
                    "type": "string",
                    "example": null
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Video not found"
        }
      },
      "x-code-samples": [
        {
          "lang": "curl",
          "source": "curl -X GET http://localhost:3000/api/v1/videos/123e4567-e89b-12d3-a456-426614174000 \\\n  -H 'x-api-key: your_api_key_here'"
        },
        {
          "lang": "javascript",
          "source": "const videoId = '123e4567-e89b-12d3-a456-426614174000';\nconst response = await fetch(`http://localhost:3000/api/v1/videos/${videoId}`, {\n  headers: {\n    'x-api-key': 'your_api_key_here'\n  }\n});\n\nconst data = await response.json();\nconsole.log(data);"
        }
      ]
    },
    "delete": {
      "summary": "Delete a video",
      "description": "Deletes a video and its associated resources.",
      "tags": ["Videos"],
      "security": [
        {
          "ApiKeyAuth": []
        }
      ],
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the video to delete",
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "example": "123e4567-e89b-12d3-a456-426614174000"
        }
      ],
      "responses": {
        "204": {
          "description": "Video deleted successfully"
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Video not found"
        }
      },
      "x-code-samples": [
        {
          "lang": "curl",
          "source": "curl -X DELETE http://localhost:3000/api/v1/videos/123e4567-e89b-12d3-a456-426614174000 \\\n  -H 'x-api-key: your_api_key_here'"
        },
        {
          "lang": "javascript",
          "source": "const videoId = '123e4567-e89b-12d3-a456-426614174000';\nconst response = await fetch(`http://localhost:3000/api/v1/videos/${videoId}`, {\n  method: 'DELETE',\n  headers: {\n    'x-api-key': 'your_api_key_here'\n  }\n});\n\nif (response.status === 204) {\n  console.log('Video deleted successfully');\n}"
        }
      ]
    }
  },
  "/api/v1/videos/{id}/status": {
    "get": {
      "summary": "Check video generation status",
      "description": "Returns the current status of a video generation process.",
      "tags": ["Videos"],
      "security": [
        {
          "ApiKeyAuth": []
        }
      ],
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the video to check",
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "example": "123e4567-e89b-12d3-a456-426614174000"
        }
      ],
      "responses": {
        "200": {
          "description": "Video status",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                  },
                  "status": {
                    "type": "string",
                    "example": "completed",
                    "enum": ["generating", "completed", "failed"]
                  },
                  "video_url": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://example.com/videos/video123.mp4"
                  },
                  "error": {
                    "type": "string",
                    "example": null
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Video not found"
        }
      },
      "x-code-samples": [
        {
          "lang": "curl",
          "source": "curl -X GET http://localhost:3000/api/v1/videos/123e4567-e89b-12d3-a456-426614174000/status \\\n  -H 'x-api-key: your_api_key_here'"
        },
        {
          "lang": "javascript",
          "source": "const videoId = '123e4567-e89b-12d3-a456-426614174000';\nconst response = await fetch(`http://localhost:3000/api/v1/videos/${videoId}/status`, {\n  headers: {\n    'x-api-key': 'your_api_key_here'\n  }\n});\n\nconst data = await response.json();\nconsole.log(data);"
        }
      ]
    }
  },
  "/api/v1/videos/{id}/dub": {
    "post": {
      "summary": "Dub a video",
      "description": "Dubs an existing video with a new audio track using text-to-speech.",
      "tags": ["Videos"],
      "security": [
        {
          "ApiKeyAuth": []
        }
      ],
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the video to dub",
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "example": "123e4567-e89b-12d3-a456-426614174000"
        }
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["script"],
              "properties": {
                "script": {
                  "type": "string",
                  "description": "Script text to be spoken in the video",
                  "example": "Here is the new audio for this video that will replace the original sound."
                },
                "voice_id": {
                  "type": "string",
                  "description": "ID of the voice to use for dubbing",
                  "example": "en-US-Standard-F1"
                },
                "language": {
                  "type": "string",
                  "description": "Language code for the dubbing",
                  "default": "en-US",
                  "example": "en-US",
                  "enum": ["en-US", "es-ES", "fr-FR", "de-DE", "it-IT", "ja-JP"]
                },
                "output_format": {
                  "type": "string",
                  "description": "Output video format",
                  "default": "mp4",
                  "example": "mp4",
                  "enum": ["mp4", "mov", "webm"]
                },
                "preserve_original_audio": {
                  "type": "boolean",
                  "description": "If true, the original audio will be preserved as background, but at a lower volume",
                  "default": false,
                  "example": false
                },
                "audio_settings": {
                  "type": "object",
                  "description": "Optional settings for audio customization",
                  "properties": {
                    "speed": {
                      "type": "number",
                      "description": "Speech speed rate (0.5-2.0)",
                      "minimum": 0.5,
                      "maximum": 2.0,
                      "default": 1.0,
                      "example": 1.0
                    },
                    "pitch": {
                      "type": "number",
                      "description": "Voice pitch adjustment (-10 to 10)",
                      "minimum": -10,
                      "maximum": 10,
                      "default": 0,
                      "example": 0
                    },
                    "volume": {
                      "type": "number",
                      "description": "Audio volume (0-100)",
                      "minimum": 0,
                      "maximum": 100,
                      "default": 100,
                      "example": 100
                    }
                  }
                }
              }
            }
          }
        }
      },
      "responses": {
        "202": {
          "description": "Video dubbing job accepted",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "job_id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "78a65d4f-9eb6-41c9-a9d3-e92c8753ac63"
                  },
                  "status": {
                    "type": "string",
                    "enum": ["pending", "processing", "completed", "failed"],
                    "example": "pending"
                  },
                  "message": {
                    "type": "string",
                    "example": "Video dubbing job has been queued"
                  },
                  "estimated_completion_time": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-01-02T01:30:00Z"
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Invalid input",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "error": {
                    "type": "string",
                    "example": "Invalid script or voice parameters"
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "403": {
          "description": "Forbidden"
        },
        "404": {
          "description": "Video not found"
        }
      },
      "x-code-samples": [
        {
          "lang": "curl",
          "source": "curl -X POST http://localhost:3000/api/v1/videos/123e4567-e89b-12d3-a456-426614174000/dub \\\n  -H 'x-api-key: your_api_key_here' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n    \"script\": \"Here is the new audio for this video that will replace the original sound.\",\n    \"voice_id\": \"en-US-Standard-F1\",\n    \"language\": \"en-US\"\n  }'"
        },
        {
          "lang": "javascript",
          "source": "const videoId = '123e4567-e89b-12d3-a456-426614174000';\nconst response = await fetch(`http://localhost:3000/api/v1/videos/${videoId}/dub`, {\n  method: 'POST',\n  headers: {\n    'x-api-key': 'your_api_key_here',\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    script: 'Here is the new audio for this video that will replace the original sound.',\n    voice_id: 'en-US-Standard-F1',\n    language: 'en-US'\n  })\n});\n\nconst data = await response.json();\nconsole.log(data);"
        }
      ]
    }
  }
}
